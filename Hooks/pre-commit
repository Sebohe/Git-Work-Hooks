#!/bin/sh

gitStatusShort=$(git status -s)
#echo "STRING"
#echo $gitStatusShort


#cycle through all the words in of STRING
for x in $gitStatusShort; do
	stagedFileName="not initiated"
	#echo $x
	#ACD
	if [[ !( -z $(echo $x | grep .ACD) ) && ( -z $ACD ) ]]; then
	   #echo "found 1"
		ACD=$x
		lastCommitFileName=$(git log --pretty=format:%H -n1 | 
							xargs git ls-tree| 
							grep .ACD |
							awk '{print $4}')		
		conditionOnStagedFile=$(git status -s | grep .ACD | awk '{print $1}')
		if [ $conditionOnStagedFile == "M" ]
		then
				stagedFileName=$(git status -s | grep .ACD | awk '{print $2}')
		elif [ $conditionOnStagedFile == "R" ]
		then
				stagedFileName=$(git status -s | grep .ACD | awk '{print $4}')
		elif [ $conditionOnStagedFile == "A" ]
		then
			stagedFileName = "new file"
		fi
	fi
	#MER
	if [[ !( -z $(echo $x | grep .mer) ) && ( -z $MER ) ]]; then
	   #echo "found 2"
	   MER=$x
	   lastCommitFileName=$(git log --pretty=format:%H -n1 | 
							xargs git ls-tree| 
							grep .mer |
							awk '{print $4}')		
	   conditionOnStagedFile=$(git status -s | grep .mer | awk '{print $1}')
		if [ $conditionOnStagedFile == "M" ]
		then
				stagedFileName=$(git status -s | grep .mer | awk '{print $2}')
		elif [ $conditionOnStagedFile == "R" ]
		then
				stagedFileName=$(git status -s | grep .mer | awk '{print $4}')
		elif [ $conditionOnStagedFile == "A" ]
		then
			stagedFileName = "new file"
		fi
	fi
	#APA
	if [[ !( -z $(echo $x | grep .apa) ) && ( -z $APA ) ]]; then
	   #echo "found 3"
	   APA=$x
	   lastCommitFileName=$(git log --pretty=format:%H -n1 | 
							xargs git ls-tree| 
							grep .apa |
							awk '{print $4}')		
	   conditionOnStagedFile=$(git status -s | grep .apa | awk '{print $1}')
		if [ $conditionOnStagedFile == "M" ]
		then
				stagedFileName=$(git status -s | grep .apa | awk '{print $2}')
		elif [ $conditionOnStagedFile == "R" ]
		then
				stagedFileName=$(git status -s | grep .apa | awk '{print $4}')
		elif [ $conditionOnStagedFile == "A" ]
		then
			stagedFileName = "new file"
		fi
	fi
	#FSP
	if [[ !( -z $(echo $x | grep .fsp) ) && ( -z $FSP ) ]]; then
	   #echo "found 4"
	   FSP=$x
	   lastCommitFileName=$(git log --pretty=format:%H -n1 | 
							xargs git ls-tree| 
							grep .fsp |
							awk '{print $4}')		
	   conditionOnStagedFile=$(git status -s | grep .fsp | awk '{print $1}')
		if [ $conditionOnStagedFile == "M" ]
		then
				stagedFileName=$(git status -s | grep .fsp | awk '{print $2}')
		elif [ $conditionOnStagedFile == "R" ]
		then
				stagedFileName=$(git status -s | grep .fsp | awk '{print $4}')
		elif [ $conditionOnStagedFile == "A" ]
		then
			stagedFileName = "new file"
		fi
	fi
	
	###############################################################
	
	
	#xx.yy.zz.ACD
	# xx = major number
	# yy = revision number
	# zz = commit number
	
	
	#won't start changing names unless the stagedFile is only one word long
	if [ $(echo $stagedFileName | wc -w) == 1 ]
	then
		#sed 's/.*v//')
		#doesn't run this section of the code if the file has been renamed
		if [ $conditionOnStagedFile == "R" ] 
		then
			echo "CONDITION IS R"
			lastMajorNumber=$(echo $lastCommitFileName | 
						awk  'BEGIN {FS=".";} {print $1;}')		
			lastRevisionNumber=$(echo $lastCommitFileName | 
							awk  'BEGIN {FS=".";} {print $2;}')
							
			newMajorNumber=$(echo $stagedFileName | 
							awk  'BEGIN {FS=".";} {print $1;}')
			newRevisionNumber=$(echo $stagedFileName | 
							awk  'BEGIN {FS=".";} {print $2;}')
		fi
		
		currentCommitNumber=$(echo $stagedFileName | awk 'BEGIN {FS=".";} {print $3; }')
		newCommitNumber=$(echo $currentCommitNumber | xargs -I {} expr {} + 1)
		newFileName=$(echo $stagedFileName | 
						awk  'BEGIN {FS=OFS=".";} {$3='$newCommitNumber';} {print;}')	

		if [[ $lastMajorNumber != $newMajorNumber ]]
		then

			newFileName=$(echo $stagedFileName | 
						awk  'BEGIN {FS=OFS=".";} {$3=0;} {print;}')
			newFileName=$(echo $newFileName | 
						awk  'BEGIN {FS=OFS=".";} {$2=0;} {print;}')


		elif [[ ( $lastRevisionNumber != $newRevisionNumber ) && ( $lastMajorNumber == $newMajorNumber ) ]]
		then
			newFileName=$(echo $stagedFileName | 
						awk  'BEGIN {FS=OFS=".";} {$3=0;} {print;}')
		fi
		#echo "newFileName"
		#echo $newFileName
		
		if [ $? -ne 0 ]; then
			exit 1
		fi
		
		git mv $stagedFileName $newFileName
		if [ $? -ne 0 ]; then
			exit 1
		fi
		echo "Hook executed."
	fi
	
	

done 




