#!/bin/sh

STRING=$(git status -s)
echo $STRING
for x in $STRING; do
	stagedFileName="not initiated"
	echo $x
	#ACD
	if [ ($(echo $x | grep .ACD)) && !(-z "$ACD") ]; then
	   echo "found 1"
	   ACD=$x
	   lastCommitFileName=$(git log --pretty=format:%H -n1 | 
							xargs git ls-tree| 
							grep .ACD |
							awk '{print $4}')
							
							
							
	   conditionOnStagedFile=$(git status -s | grep .ACD | awk '{print $1}')
	   
		if [ $conditionOnStagedFile == "M" ]
			then
				stagedFileName=$(git status -s | grep .ACD | awk '{print $2}')
		elif [ $conditionOnStagedFile == "R" ]
			then
				stagedFileName=$(git status -s | grep .ACD | awk '{print $4}')
		fi
	fi
	#MER
	if [ ($(echo $x | grep .mer)) && !(-z "$MER") ]; then
       echo "found 2"
       MER=$x
	   lastCommitFileName=$(git log --pretty=format:%H -n1 | 
							xargs git ls-tree| 
							grep .mer |
							awk '{print $4}')
							
							
							
	   conditionOnStagedFile=$(git status -s | grep .mer | awk '{print $1}')
	   
		if [ $conditionOnStagedFile == "M" ]
			then
				stagedFileName=$(git status -s | grep .mer | awk '{print $2}')
		elif [ $conditionOnStagedFile == "R" ]
			then
				stagedFileName=$(git status -s | grep .mer | awk '{print $4}')
		fi
       
	fi
	#APA
	if [ ($(echo $x | grep .apa)) && !(-z "$APA") ]; then
       echo "found 3"
       APA=$x
	   lastCommitFileName=$(git log --pretty=format:%H -n1 | 
							xargs git ls-tree| 
							grep .apa |
							awk '{print $4}')
							
							
							
	   conditionOnStagedFile=$(git status -s | grep .apa | awk '{print $1}')
	   
		if [ $conditionOnStagedFile == "M" ]
			then
				stagedFileName=$(git status -s | grep .apa | awk '{print $2}')
		elif [ $conditionOnStagedFile == "R" ]
			then
				stagedFileName=$(git status -s | grep .apa | awk '{print $4}')
		fi
       
	fi
	#FSP
	if [ ($(echo $x | grep .fsp)) && !(-z "$FSP") ]; then
       echo "found 4"
       FSP=$x
	   lastCommitFileName=$(git log --pretty=format:%H -n1 | 
							xargs git ls-tree| 
							grep .fsp |
							awk '{print $4}')
							
							
							
	   conditionOnStagedFile=$(git status -s | grep .fsp | awk '{print $1}')
	   
		if [ $conditionOnStagedFile == "M" ]
			then
				stagedFileName=$(git status -s | grep .fsp | awk '{print $2}')
		elif [ $conditionOnStagedFile == "R" ]
			then
				stagedFileName=$(git status -s | grep .fsp | awk '{print $4}')
		fi
       
	fi
   
   
   
	if [ $(echo $stagedFileName | wc -w) == 1 ]
	then
		#sed 's/.*v//')
		lastACDVersion=$(echo $lastCommitFileName | 
					awk  'BEGIN {FS=".";} {print $1;}')		
		lastHMIVersion=$(echo $lastCommitFileName | 
						awk  'BEGIN {FS=".";} {print $2;}')
		newACDVersion=$(echo $stagedFileName | 
						awk  'BEGIN {FS=".";} {print $1;}')
		newHMIVersion=$(echo $stagedFileName | 
						awk  'BEGIN {FS=".";} {print $2;}')
						
						
						
		currentREV=$(echo $stagedFileName | awk 'BEGIN {FS=".";} {print $3; }')
		newRev=$(echo $currentREV | xargs -I {} expr {} + 1)
	#https://stackoverflow.com/questions/34872375/awk-command-in-bash-script-replaced-my-file-field-separator-from-to
		newFileName=$(echo $stagedFileName | 
						awk  'BEGIN {FS=OFS=".";} {$3='$newRev';} {print;}')	
		if [ $lastACDVersion != $newACDVersion ]
		then
			#echo "first if"
			#THIS SETS TO zero THE REV COUNT
			echo $newACDVersion
			newFileName=$(echo $stagedFileName | 
						awk  'BEGIN {FS=OFS=".";} {$3=0;} {print;}')
						#Why wasn't this working: {$1='$newACDVersion'; $3=0;}
		elif [ $lastHMIVersion != $newHMIVersion ]
		then
			#echo "second if"
			newFileName=$(echo $stagedFileName | 
						awk  'BEGIN {FS=OFS=".";} {$3=0;} {print;}')
		fi
		#echo "newFileName"
		#echo $newFileName
		git mv $stagedFileName $newFileName
		echo "Hook executed."
		
	else
		echo "Hook script not executed. Aborting commit"
		exit 1
	fi   
done 



